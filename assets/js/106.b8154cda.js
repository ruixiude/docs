(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{465:function(e,t,a){"use strict";a.r(t);var s=a(42),r=Object(s.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"retrofit"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retrofit"}},[e._v("#")]),e._v(" Retrofit")]),e._v(" "),a("p",[e._v("A type-safe HTTP client for Android and Java.")]),e._v(" "),a("h2",{attrs:{id:"introduction"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#introduction"}},[e._v("#")]),e._v(" Introduction")]),e._v(" "),a("p",[e._v("Retrofit turns your HTTP API into a Java interface.")]),e._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("public")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("interface")]),e._v(" GitHubService "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n  "),a("span",{pre:!0,attrs:{class:"token annotation builtin"}},[e._v("@GET")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"users/{user}/repos"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n  Call"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("List"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("Repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("listRepos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token annotation builtin"}},[e._v("@Path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"user"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v(" String user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br")])]),a("p",[e._v("The Retrofit class generates an implementation of the GitHubService interface.")]),e._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[e._v("Retrofit retrofit "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" new Retrofit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("Builder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("baseUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"https://api.github.com/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),e._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n\nGitHubService service "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" retrofit"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("create")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),e._v("GitHubService"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),e._v("class"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("p",[e._v("Each Call from the created GitHubService can make a synchronous or asynchronous HTTP request to the remote webserver.")]),e._v(" "),a("div",{staticClass:"language-kotlin line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-kotlin"}},[a("code",[e._v("Call"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("List"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("<")]),e._v("Repo"),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v(">")]),e._v(" repos "),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),e._v(" service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[e._v("listRepos")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v('"octocat"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(";")]),e._v("\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("Use annotations to describe the HTTP request:")]),e._v(" "),a("ul",[a("li",[e._v("URL parameter replacement and query parameter support")]),e._v(" "),a("li",[e._v("Object conversion to request body (e.g., JSON, protocol buffers)")]),e._v(" "),a("li",[e._v("Multipart request body and file upload")])]),e._v(" "),a("h2",{attrs:{id:"api-declaration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api-declaration"}},[e._v("#")]),e._v(" API Declaration")]),e._v(" "),a("p",[e._v("Annotations on the interface methods and its parameters indicate how a request will be handled.")]),e._v(" "),a("h3",{attrs:{id:"request-method"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-method"}},[e._v("#")]),e._v(" REQUEST METHOD")]),e._v(" "),a("p",[e._v("Every method must have an HTTP annotation that provides the request method and relative URL. There are eight built-in annotations: "),a("code",[e._v("HTTP")]),e._v(", "),a("code",[e._v("GET")]),e._v(", "),a("code",[e._v("POST")]),e._v(", "),a("code",[e._v("PUT")]),e._v(", "),a("code",[e._v("PATCH")]),e._v(", "),a("code",[e._v("DELETE")]),e._v(", "),a("code",[e._v("OPTIONS")]),e._v(" and "),a("code",[e._v("HEAD")]),e._v(". The relative URL of the resource is specified in the annotation.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@GET("users/list")\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("You can also specify query parameters in the URL.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@GET("users/list?sort=desc")\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("h3",{attrs:{id:"url-manipulation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url-manipulation"}},[e._v("#")]),e._v(" URL MANIPULATION")]),e._v(" "),a("p",[e._v("A request URL can be updated dynamically using replacement blocks and parameters on the method. A replacement block is an alphanumeric string surrounded by "),a("code",[e._v("{")]),e._v(" and "),a("code",[e._v("}")]),e._v(". A corresponding parameter must be annotated with "),a("code",[e._v("@Path")]),e._v(" using the same string.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@GET("group/{id}/users")\nCall<List<User>> groupList(@Path("id") int groupId);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("Query parameters can also be added.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@GET("group/{id}/users")\nCall<List<User>> groupList(@Path("id") int groupId, @Query("sort") String sort);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("For complex query parameter combinations a "),a("code",[e._v("Map")]),e._v(" can be used.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@GET("group/{id}/users")\nCall<List<User>> groupList(@Path("id") int groupId, @QueryMap Map<String, String> options);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("h3",{attrs:{id:"request-body"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#request-body"}},[e._v("#")]),e._v(" REQUEST BODY")]),e._v(" "),a("p",[e._v("An object can be specified for use as an HTTP request body with the "),a("code",[e._v("@Body")]),e._v(" annotation.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@POST("users/new")\nCall<User> createUser(@Body User user);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("The object will also be converted using a converter specified on the Retrofit instance. If no converter is added, only RequestBody can be used.")]),e._v(" "),a("h3",{attrs:{id:"form-encoded-and-multipart"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#form-encoded-and-multipart"}},[e._v("#")]),e._v(" FORM ENCODED AND MULTIPART")]),e._v(" "),a("p",[e._v("Methods can also be declared to send form-encoded and multipart data.")]),e._v(" "),a("p",[e._v("Form-encoded data is sent when "),a("code",[e._v("@FormUrlEncoded")]),e._v(" is present on the method. Each key-value pair is annotated with "),a("code",[e._v("@Field")]),e._v(" containing the name and the object providing the value.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@FormUrlEncoded\n@POST("user/edit")\nCall<User> updateUser(@Field("first_name") String first, @Field("last_name") String last);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("Multipart requests are used when "),a("code",[e._v("@Multipart")]),e._v(" is present on the method. Parts are declared using the "),a("code",[e._v("@Part")]),e._v(" annotation.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@Multipart\n@PUT("user/photo")\nCall<User> updateUser(@Part("photo") RequestBody photo, @Part("description") RequestBody description);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("p",[e._v("Multipart parts use one of "),a("code",[e._v("Retrofit")]),e._v("'s converters or they can implement RequestBody to handle their own serialization.")]),e._v(" "),a("h3",{attrs:{id:"header-manipulation"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#header-manipulation"}},[e._v("#")]),e._v(" HEADER MANIPULATION")]),e._v(" "),a("p",[e._v("You can set static headers for a method using the "),a("code",[e._v("@Headers")]),e._v(" annotation.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@Headers("Cache-Control: max-age=640000")\n@GET("widget/list")\nCall<List<Widget>> widgetList();\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br")])]),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@Headers({\n    "Accept: application/vnd.github.v3.full+json",\n    "User-Agent: Retrofit-Sample-App"\n})\n@GET("users/{username}")\nCall<User> getUser(@Path("username") String username);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("p",[e._v("Note that headers do not overwrite each other. All headers with the same name will be included in the request.")]),e._v(" "),a("p",[e._v("A request Header can be updated dynamically using the "),a("code",[e._v("@Header")]),e._v(" annotation. A corresponding parameter must be provided to the "),a("code",[e._v("@Header")]),e._v(". If the value is null, the header will be omitted. Otherwise, "),a("code",[e._v("toString")]),e._v(" will be called on the value, and the result used.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@GET("user")\nCall<User> getUser(@Header("Authorization") String authorization)\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("Similar to query parameters, for complex header combinations, a Map can be used.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('@GET("user")\nCall<User> getUser(@HeaderMap Map<String, String> headers)\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br")])]),a("p",[e._v("Headers that need to be added to every request can be specified using an "),a("a",{attrs:{href:"https://github.com/square/okhttp/wiki/Interceptors",target:"_blank",rel:"noopener noreferrer"}},[e._v("OkHttp interceptor"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"synchronous-vs-asynchronous"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronous-vs-asynchronous"}},[e._v("#")]),e._v(" SYNCHRONOUS VS. ASYNCHRONOUS")]),e._v(" "),a("p",[a("code",[e._v("Call")]),e._v(" instances can be executed either synchronously or asynchronously. Each instance can only be used once, but calling "),a("code",[e._v("clone()")]),e._v(" will create a new instance that can be used.")]),e._v(" "),a("p",[e._v("On Android, callbacks will be executed on the main thread. On the JVM, callbacks will happen on the same thread that executed the HTTP request.")]),e._v(" "),a("h2",{attrs:{id:"retrofit-configuration"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#retrofit-configuration"}},[e._v("#")]),e._v(" Retrofit Configuration")]),e._v(" "),a("p",[a("code",[e._v("Retrofit")]),e._v(" is the class through which your API interfaces are turned into callable objects. By default, Retrofit will give you sane defaults for your platform but it allows for customization.")]),e._v(" "),a("h3",{attrs:{id:"converters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#converters"}},[e._v("#")]),e._v(" CONVERTERS")]),e._v(" "),a("p",[e._v("By default, Retrofit can only deserialize HTTP bodies into OkHttp's "),a("code",[e._v("ResponseBody")]),e._v(" type and it can only accept its "),a("code",[e._v("RequestBody")]),e._v(" type for "),a("code",[e._v("@Body")]),e._v(".")]),e._v(" "),a("p",[e._v("Converters can be added to support other types. Six sibling modules adapt popular serialization libraries for your convenience.")]),e._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/google/gson",target:"_blank",rel:"noopener noreferrer"}},[e._v("Gson"),a("OutboundLink")],1),e._v(": "),a("code",[e._v("com.squareup.retrofit2:converter-gson")])]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/FasterXML/jackson",target:"_blank",rel:"noopener noreferrer"}},[e._v("Jackson"),a("OutboundLink")],1),e._v(": "),a("code",[e._v("com.squareup.retrofit2:converter-jackson")])]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/square/moshi/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Moshi"),a("OutboundLink")],1),e._v(": "),a("code",[e._v("com.squareup.retrofit2:converter-moshi")])]),e._v(" "),a("li",[a("a",{attrs:{href:"https://developers.google.com/protocol-buffers/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Protobuf"),a("OutboundLink")],1),e._v(": "),a("code",[e._v("com.squareup.retrofit2:converter-protobuf")])]),e._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/square/wire",target:"_blank",rel:"noopener noreferrer"}},[e._v("Wire"),a("OutboundLink")],1),e._v(": "),a("code",[e._v("com.squareup.retrofit2:converter-wire")])]),e._v(" "),a("li",[a("a",{attrs:{href:"http://simple.sourceforge.net/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Simple XML"),a("OutboundLink")],1),e._v(": "),a("code",[e._v("com.squareup.retrofit2:converter-simplexml")])]),e._v(" "),a("li",[a("a",{attrs:{href:"https://docs.oracle.com/javase/tutorial/jaxb/intro/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("JAXB"),a("OutboundLink")],1),e._v(": "),a("code",[e._v("com.squareup.retrofit2:converter-jaxb")])]),e._v(" "),a("li",[e._v("Scalars (primitives, boxed, and String): "),a("code",[e._v("com.squareup.retrofit2:converter-scalars")])])]),e._v(" "),a("p",[e._v("Here's an example of using the "),a("code",[e._v("GsonConverterFactory")]),e._v(" class to generate an implementation of the "),a("code",[e._v("GitHubService")]),e._v(" interface which uses Gson for its deserialization.")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Retrofit retrofit = new Retrofit.Builder()\n    .baseUrl("https://api.github.com/")\n    .addConverterFactory(GsonConverterFactory.create())\n    .build();\n\nGitHubService service = retrofit.create(GitHubService.class);\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br")])]),a("h3",{attrs:{id:"custom-converters"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#custom-converters"}},[e._v("#")]),e._v(" CUSTOM CONVERTERS")]),e._v(" "),a("p",[e._v("If you need to communicate with an API that uses a content-format that Retrofit does not support out of the box (e.g. YAML, txt, custom format) or you wish to use a different library to implement an existing format, you can easily create your own converter. Create a class that extends the "),a("a",{attrs:{href:"https://github.com/square/retrofit/blob/master/retrofit/src/main/java/retrofit2/Converter.java",target:"_blank",rel:"noopener noreferrer"}},[a("code",[e._v("Converter.Factory")]),e._v(" class"),a("OutboundLink")],1),e._v(" and pass in an instance when building your adapter.")]),e._v(" "),a("h2",{attrs:{id:"download"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#download"}},[e._v("#")]),e._v(" Download")]),e._v(" "),a("p",[e._v("The source code to the Retrofit, its samples, and this website is available on "),a("a",{attrs:{href:"https://github.com/square/retrofit",target:"_blank",rel:"noopener noreferrer"}},[e._v("GitHub"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("h3",{attrs:{id:"maven"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#maven"}},[e._v("#")]),e._v(" MAVEN")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("<dependency>\n  <groupId>com.squareup.retrofit2</groupId>\n  <artifactId>retrofit</artifactId>\n  <version>(insert latest version)</version>\n</dependency>\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br")])]),a("h3",{attrs:{id:"gradle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gradle"}},[e._v("#")]),e._v(" GRADLE")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v("implementation 'com.squareup.retrofit2:retrofit:(insert latest version)'\n")])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br")])]),a("p",[e._v("Retrofit requires at minimum Java 8+ or Android API 21+.")]),e._v(" "),a("h3",{attrs:{id:"r8-proguard"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#r8-proguard"}},[e._v("#")]),e._v(" R8 / PROGUARD")]),e._v(" "),a("p",[e._v("If you are using R8 the shrinking and obfuscation rules are included automatically.")]),e._v(" "),a("p",[e._v("ProGuard users must manually add the options from "),a("a",{attrs:{href:"https://github.com/square/retrofit/blob/master/retrofit/src/main/resources/META-INF/proguard/retrofit2.pro",target:"_blank",rel:"noopener noreferrer"}},[e._v("retrofit2.pro"),a("OutboundLink")],1),e._v(".")]),e._v(" "),a("p",[e._v("You might also need rules for "),a("a",{attrs:{href:"https://square.github.io/okhttp/r8_proguard",target:"_blank",rel:"noopener noreferrer"}},[e._v("OkHttp"),a("OutboundLink")],1),e._v(" and "),a("a",{attrs:{href:"https://github.com/square/okio#r8--proguard",target:"_blank",rel:"noopener noreferrer"}},[e._v("Okio"),a("OutboundLink")],1),e._v(" which are dependencies of this library.")]),e._v(" "),a("h2",{attrs:{id:"contributing"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#contributing"}},[e._v("#")]),e._v(" Contributing")]),e._v(" "),a("p",[e._v("If you would like to contribute code you can do so through GitHub by forking the repository and sending a pull request.")]),e._v(" "),a("p",[e._v("When submitting code, please make every effort to follow existing conventions and style in order to keep the code as readable as possible. Please also make sure your code compiles by running ./gradlew build (or gradlew.bat build for Windows).")]),e._v(" "),a("p",[e._v("Before your code can be accepted into the project you must also sign the "),a("a",{attrs:{href:"https://squ.re/sign-the-cla",target:"_blank",rel:"noopener noreferrer"}},[e._v("Individual Contributor License Agreement (CLA)."),a("OutboundLink")],1)]),e._v(" "),a("h2",{attrs:{id:"license"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#license"}},[e._v("#")]),e._v(" License")]),e._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('Copyright 2013 Square, Inc.\n\nLicensed under the Apache License, Version 2.0 (the "License");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n   http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an "AS IS" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n')])]),e._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[e._v("1")]),a("br"),a("span",{staticClass:"line-number"},[e._v("2")]),a("br"),a("span",{staticClass:"line-number"},[e._v("3")]),a("br"),a("span",{staticClass:"line-number"},[e._v("4")]),a("br"),a("span",{staticClass:"line-number"},[e._v("5")]),a("br"),a("span",{staticClass:"line-number"},[e._v("6")]),a("br"),a("span",{staticClass:"line-number"},[e._v("7")]),a("br"),a("span",{staticClass:"line-number"},[e._v("8")]),a("br"),a("span",{staticClass:"line-number"},[e._v("9")]),a("br"),a("span",{staticClass:"line-number"},[e._v("10")]),a("br"),a("span",{staticClass:"line-number"},[e._v("11")]),a("br"),a("span",{staticClass:"line-number"},[e._v("12")]),a("br"),a("span",{staticClass:"line-number"},[e._v("13")]),a("br")])])])}),[],!1,null,null,null);t.default=r.exports}}]);