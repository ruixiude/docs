(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{457:function(e,t,s){"use strict";s.r(t);var r=s(42),a=Object(r.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"calls"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#calls"}},[e._v("#")]),e._v(" Calls")]),e._v(" "),s("p",[e._v("HTTP 客户端的任务是接受您的请求并生成其响应。这在理论上很简单，但在实践中却很棘手。")]),e._v(" "),s("h2",{attrs:{id:"requests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#requests"}},[e._v("#")]),e._v(" Requests")]),e._v(" "),s("p",[e._v("每一个 HTTP 请求包含一个"),s("code",[e._v("请求地址URL")]),e._v("、"),s("code",[e._v("请求方法（如GET或POST）")]),e._v("、"),s("code",[e._v("请求Headers")]),e._v("，很多请求可能包含 "),s("code",[e._v("请求 Body")]),e._v("（特定内容类型的数据流）。")]),e._v(" "),s("h2",{attrs:{id:"responses"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#responses"}},[e._v("#")]),e._v(" Responses")]),e._v(" "),s("p",[e._v("响应数据包含 "),s("code",[e._v("响应状态码（如200表示成功或404表示未找到）")]),e._v("、"),s("code",[e._v("响应Headers")]),e._v("、"),s("code",[e._v("可选的响应Body")]),e._v("。")]),e._v(" "),s("h2",{attrs:{id:"rewriting-requests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rewriting-requests"}},[e._v("#")]),e._v(" Rewriting Requests")]),e._v(" "),s("p",[e._v("当你使用 OkHttp 发起 HTTP 请求时，你的思想处于这样一个高度 “"),s("em",[e._v("使用这个URL地址 和这些请求Headers获取数据")]),e._v("”。为了保证效率和正确性，OkHttp 在传输请求之前会先对其进行重写。")]),e._v(" "),s("p",[e._v("OkHttp 可以添加原始请求中缺少的 Header，包括 Content-Length、Transfer-Encoding、User-Agent、Host、Connection、Content-Type；如 Accept-Encoding 不存在，OkHttp 会添加 Header 用于压缩传输的 Accept-Encoding；如果你获取过 cookies，OkHttp 将自动将cookies添加到 header 中。")]),e._v(" "),s("p",[e._v("一些请求支持response数据缓存。当缓存的response数据过期时，OkHttp在一定条件下可以发起一个GET请求，以获取新的response数据。这类请求的headers，例如 "),s("code",[e._v("If-Modified-Since")]),e._v("、"),s("code",[e._v("If-None-Match")]),e._v(" 会被添加。")]),e._v(" "),s("h2",{attrs:{id:"rewriting-responses"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rewriting-responses"}},[e._v("#")]),e._v(" Rewriting Responses")]),e._v(" "),s("p",[e._v("如果数据传输中使用压缩算法，OkHttp 将删除相应的响应 Header 如 Content-Encoding、Content-Length，因为它们不适用于解压缩的 response body。")]),e._v(" "),s("p",[e._v("如果 conditional GET 成功，则会按照规范将 network与cache 的响应数据进行合并。")]),e._v(" "),s("h2",{attrs:{id:"follow-up-requests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#follow-up-requests"}},[e._v("#")]),e._v(" Follow-up Requests")]),e._v(" "),s("p",[e._v("如果你请求的 URL 已被重定向，在发生网络请求时，webserver 将会返回一个 302 响应码，此302响应码用来标识重定向后新的 URL 请求地址。OkHttp 将会自动重定向，并获取最终的 response 数据。")]),e._v(" "),s("p",[e._v("如果请求的响应信息提示要求进行 authorization 授权验证，OkHttp将会安全的完成授权验证（如果此时挑战信息已配置）；如果验证器提供了一个凭证，则在包含该凭证的情况下重试请求。")]),e._v(" "),s("h2",{attrs:{id:"retrying-requests"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#retrying-requests"}},[e._v("#")]),e._v(" Retrying Requests")]),e._v(" "),s("p",[e._v("有时连接失败：\n无论是本地连接池原因，还是网络原因造成webserver不可达，当网络条件可用时，OkHttp将会重试。")]),e._v(" "),s("h2",{attrs:{id:"calls-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#calls-2"}},[e._v("#")]),e._v(" Calls")]),e._v(" "),s("p",[e._v("通过 rewrites、redirects、follow-ups、retries，你的请求可能会产生许多中间请求和响应数据。OkHttp使用API "),s("code",[e._v("Call")]),e._v(" 来建立 Request 请求，为了保证请求的安全性，许多中间请求和响应是必不可少的。通常，中间请求不多！但是，值得高兴的是，如果你的 URLs 被重定向，或你的服务器出现故障，该请求将会被重试。")]),e._v(" "),s("p",[s("code",[e._v("Calls")]),e._v(" 会以以下两种方式执行：")]),e._v(" "),s("ul",[s("li",[s("code",[e._v("同步执行")]),e._v("：执行线程会被阻塞，直到response数据返回；")]),e._v(" "),s("li",[s("code",[e._v("异步执行")]),e._v("：你可以将请求放在任何线程上，响应的回调数据将在另一个线程中获取。")])]),e._v(" "),s("p",[s("code",[e._v("Calls")]),e._v(" 可以在任何线程中被取消掉，这将倒是请求失败，如果请求尚未完成。当取消请求时，写request body或读response body位置处将抛出IOException异常。")]),e._v(" "),s("h2",{attrs:{id:"dispatch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#dispatch"}},[e._v("#")]),e._v(" Dispatch")]),e._v(" "),s("p",[e._v("对于同步调用，需要自己创建执行线程，并负责控制您发出的请求数量， 同时连接过多会浪费资源， 太少会造成延迟。")]),e._v(" "),s("p",[e._v("对于异步调用，"),s("code",[e._v("Dispatcher")]),e._v(" 默认请求策略为： 每个webserver服务器默认最大请求数量默认为5，整体的最大请求数量为64，并且这两个值用户可自行定义。")])])}),[],!1,null,null,null);t.default=a.exports}}]);