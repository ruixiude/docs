(window.webpackJsonp=window.webpackJsonp||[]).push([[88],{447:function(e,t,n){"use strict";n.r(t);var a=n(42),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("h1",{attrs:{id:"tutorial-demo-project"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#tutorial-demo-project"}},[e._v("#")]),e._v(" Tutorial: Demo Project")]),e._v(" "),n("p",[e._v("Walk-through of an example Android note taking app using ObjectBox.")]),e._v(" "),n("p",[e._v("What is ObjectBox? It’s a mobile database that makes object persistence simple and super fast.")]),e._v(" "),n("p",[e._v("This tutorial will walk you through a simple note-taking app explaining how to do basic operations with ObjectBox. To just integrate ObjectBox into your project, look for the "),n("a",{attrs:{href:"https://docs.objectbox.io/getting-started",target:"_blank",rel:"noopener noreferrer"}},[e._v("Getting Started"),n("OutboundLink")],1),e._v(" page.")]),e._v(" "),n("p",[e._v("It’s a good idea to clone the "),n("a",{attrs:{href:"https://github.com/objectbox/objectbox-examples",target:"_blank",rel:"noopener noreferrer"}},[e._v("example project repository"),n("OutboundLink")],1),e._v(" from GitHub right now:")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("git clone https://github.com/objectbox/objectbox-examples.git\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br")])]),n("p",[e._v("This allows you to run the code and explore it in its entirety. The example project discussed here is in the "),n("code",[e._v("android-app")]),e._v(" folder (or "),n("code",[e._v("android-app-kotlin")]),e._v(" for the Kotlin version). It is a simple Android app for taking notes where you can add new notes by typing in some text and delete notes by clicking on an existing note.")]),e._v(" "),n("h2",{attrs:{id:"the-note-entity-and-box-class"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#the-note-entity-and-box-class"}},[e._v("#")]),e._v(" The Note entity and Box class")]),e._v(" "),n("p",[e._v("To begin let’s jump right into the code: in the "),n("code",[e._v("src")]),e._v(" folder you will find the entity class for a note, "),n("code",[e._v("Note")]),e._v(". It is persisted to the database and contains all data that is part of a note, like an id, note text and the creation date.")]),e._v(" "),n("tabs",[n("p",[e._v("::: Java")]),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Note.java\n@Entity\npublic class Note {\n    \n    @Id\n    long id;\n    \n    String text;\n    String comment;\n    Date date;\n    \n    ...\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br"),n("span",{staticClass:"line-number"},[e._v("12")]),n("br"),n("span",{staticClass:"line-number"},[e._v("13")]),n("br")])]),n("p",[e._v(":::")]),e._v(" "),n("tab",{attrs:{name:"Kotlin"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("Note.kt\n@Entity\ndata class Note(\n        @Id var id: Long = 0,\n        var text: String? = null,\n        var comment: String? = null,\n        var date: Date? = null\n)\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])])])],1),e._v(" "),n("p",[e._v("In general, an ObjectBox entity is an annotated class persisted in the database with its properties. In order to extend our note or to create new entities, you simply modify or create new plain Java classes and annotate them with "),n("code",[e._v("@Entity")]),e._v(" and "),n("code",[e._v("@Id")]),e._v(".")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://docs.objectbox.io/entity-annotations",target:"_blank",rel:"noopener noreferrer"}},[e._v("Entity Annotations/entity-annotations"),n("OutboundLink")],1)]),e._v(" "),n("p",[e._v("Go ahead and build the project, for example by using "),n("strong",[e._v("Build > Make project")]),e._v(" in Android Studio. This triggers ObjectBox to generate some classes, like "),n("code",[e._v("MyObjectBox.java")]),e._v(", and some other classes used by ObjectBox internally.")]),e._v(" "),n("h3",{attrs:{id:"inserting-notes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#inserting-notes"}},[e._v("#")]),e._v(" Inserting notes")]),e._v(" "),n("p",[e._v("To see how new notes are added to the database, take a look at the "),n("code",[e._v("NoteActivity")]),e._v(" class. First of all a "),n("code",[e._v("Box")]),e._v(" object for the "),n("code",[e._v("Note")]),e._v(" class is prepared, which is done in "),n("code",[e._v("onCreate()")]),e._v(":")]),e._v(" "),n("tabs",[n("tab",{attrs:{name:"Java"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NoteActivity.java\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    ...\n    notesBox = ObjectBox.get().boxFor(Note.class);\n    ...\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br")])])]),e._v(" "),n("tab",{attrs:{name:"Kotlin"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NoteActivity.kt\npublic override fun onCreate(savedInstanceState: Bundle?) {\n    ...\n    notesBox = ObjectBox.boxStore.boxFor()\n    ...\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br")])])])],1),e._v(" "),n("blockquote",[n("p",[e._v("Note: In the example project, "),n("code",[e._v("ObjectBox")]),e._v(" is the name of a helper class to set up and keep a reference to "),n("code",[e._v("BoxStore")]),e._v(".")])]),e._v(" "),n("p",[e._v("When the user clicks the ADD button the method "),n("code",[e._v("addNote()")]),e._v(" is called. There, a new "),n("code",[e._v("Note")]),e._v(" object is created and put into the database using the "),n("code",[e._v("Box")]),e._v(" reference:")]),e._v(" "),n("tabs",[n("tab",{attrs:{name:"Java"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('NoteActivity.java\nprivate void addNote() {\n    ...\n    Note note = new Note();\n    note.setText(noteText);\n    note.setComment(comment);\n    note.setDate(new Date());\n    notesBox.put(note);\n    Log.d(App.TAG, "Inserted new note, ID: " + note.getId());\n    ...\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br"),n("span",{staticClass:"line-number"},[e._v("11")]),n("br")])])]),e._v(" "),n("tab",{attrs:{name:"Kotlin"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('NoteActivity.kt\nprivate fun addNote() {\n    ...\n    val note = Note(text = noteText, comment = comment, date = Date())\n    notesBox.put(note)\n    Log.d(App.TAG, "Inserted new note, ID: " + note.id)\n    ...\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])])])],1),e._v(" "),n("blockquote",[n("p",[e._v("Note that the ID is left at 0 when creating the note. In this case ObjectBox assigns an ID during "),n("code",[e._v("put()")]),e._v(".")])]),e._v(" "),n("h3",{attrs:{id:"removing-deleting-notes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#removing-deleting-notes"}},[e._v("#")]),e._v(" Removing/deleting notes")]),e._v(" "),n("p",[e._v("When the user taps a note it should be deleted. To remove (or delete) a note from its box use "),n("code",[e._v("remove()")]),e._v(" or one of its overloads. See "),n("code",[e._v("noteClickListener")]),e._v(":")]),e._v(" "),n("tabs",[n("tab",{attrs:{name:"Java"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('NoteActivity.java\nOnItemClickListener noteClickListener = new OnItemClickListener() {\n    @Override\n    public void onItemClick(AdapterView<?> parent, View view, int position, long id) {\n        Note note = notesAdapter.getItem(position);\n        notesBox.remove(note);\n        Log.d(App.TAG, "Deleted note, ID: " + note.getId());\n        ...\n    }\n};\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br"),n("span",{staticClass:"line-number"},[e._v("10")]),n("br")])])]),e._v(" "),n("tab",{attrs:{name:"Kotlin"}}),e._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('NoteActivity.kt\nprivate val noteClickListener = OnItemClickListener { _, _, position, _ ->\n    notesAdapter.getItem(position)?.also {\n        notesBox.remove(it)\n        Log.d(App.TAG, "Deleted note, ID: " + it.id)\n    }\n    ...\n}\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])]),n("p",[e._v(":::")])],1),e._v(" "),n("h3",{attrs:{id:"querying-notes"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#querying-notes"}},[e._v("#")]),e._v(" Querying notes")]),e._v(" "),n("p",[e._v("To query and display notes with a list adapter a "),n("code",[e._v("Query")]),e._v(" instance is built once in "),n("code",[e._v("onCreate()")]),e._v(":")]),e._v(" "),n("tabs",[n("tab",{attrs:{name:"Java"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NoteActivity.java\n@Override\npublic void onCreate(Bundle savedInstanceState) {\n    ...\n    // Query all notes, sorted a-z by their text.\n    notesQuery = notesBox.query().order(Note_.text).build();\n    ...\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br")])])]),e._v(" "),n("tab",{attrs:{name:"Kotlin"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NoteActivity.kt\npublic override fun onCreate(savedInstanceState: Bundle?) {\n    ...\n    // Query all notes, sorted a-z by their text.\n    notesQuery = notesBox.query {\n        order(Note_.text)\n    }\n    ...\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br"),n("span",{staticClass:"line-number"},[e._v("6")]),n("br"),n("span",{staticClass:"line-number"},[e._v("7")]),n("br"),n("span",{staticClass:"line-number"},[e._v("8")]),n("br"),n("span",{staticClass:"line-number"},[e._v("9")]),n("br")])])])],1),e._v(" "),n("p",[e._v("And then executed each time any notes change:")]),e._v(" "),n("tabs",[n("tab",{attrs:{name:"Java"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NoteActivity.java\nprivate void updateNotes() {\n    List<Note> notes = notesQuery.find();\n    notesAdapter.setNotes(notes);\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])])]),e._v(" "),n("tab",{attrs:{name:"Kotlin"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v("NoteActivity.kt\nprivate fun updateNotes() {\n    val notes = notesQuery.find()\n    notesAdapter.setNotes(notes)\n}\n")])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br"),n("span",{staticClass:"line-number"},[e._v("3")]),n("br"),n("span",{staticClass:"line-number"},[e._v("4")]),n("br"),n("span",{staticClass:"line-number"},[e._v("5")]),n("br")])])])],1),e._v(" "),n("p",[e._v("In addition to an order, you can add various conditions, like equality or less/greater than, when building a query.")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://docs.objectbox.io/queries",target:"_blank",rel:"noopener noreferrer"}},[e._v("ObjectBox Queries/queries"),n("OutboundLink")],1)]),e._v(" "),n("h3",{attrs:{id:"updating-notes-and-more"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#updating-notes-and-more"}},[e._v("#")]),e._v(" Updating notes and more")]),e._v(" "),n("p",[e._v("What is not shown in the example, but is just as easy is how to update an existing (== the ID is not 0) note. Just modify any of its properties and call "),n("code",[e._v("put()")]),e._v(" again with the changed object:")]),e._v(" "),n("tabs",[n("tab",{attrs:{name:"Java"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('note.setText("This note has changed.");\nnotesBox.put(note);\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])])]),e._v(" "),n("tab",{attrs:{name:"Kotlin"}},[n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('note.text = "This note has changed."\nnotesBox.put(note)\n')])]),e._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[e._v("1")]),n("br"),n("span",{staticClass:"line-number"},[e._v("2")]),n("br")])])])],1),e._v(" "),n("p",[e._v("There are "),n("strong",[e._v("additional methods to put, find, query, count or remove")]),e._v(" entities. Check out the methods of "),n("a",{attrs:{href:"http://objectbox.io/files/objectbox-java/current/io/objectbox/Box.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("the Box class"),n("OutboundLink")],1),e._v(" to learn more.")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://docs.objectbox.io/getting-started",target:"_blank",rel:"noopener noreferrer"}},[e._v("Getting started/getting-started"),n("OutboundLink")],1)]),e._v(" "),n("h1",{attrs:{id:"setting-up-the-database"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#setting-up-the-database"}},[e._v("#")]),e._v(" "),n("strong",[e._v("Setting up the database")])]),e._v(" "),n("p",[e._v("Now that you saw ObjectBox in action, how did we get that "),n("a",{attrs:{href:"http://objectbox.io/files/objectbox-java/current/io/objectbox/BoxStore.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("BoxStore"),n("OutboundLink")],1),e._v(" instance? Typically you should set up a BoxStore once for the whole app. This example uses a "),n("a",{attrs:{href:"https://docs.objectbox.io/getting-started#core-initialization",target:"_blank",rel:"noopener noreferrer"}},[e._v("helper class as recommended in the Getting Started guide"),n("OutboundLink")],1),e._v(".")]),e._v(" "),n("p",[n("a",{attrs:{href:"https://docs.objectbox.io/getting-started",target:"_blank",rel:"noopener noreferrer"}},[e._v("Getting started"),n("OutboundLink")],1)]),e._v(" "),n("blockquote",[n("p",[e._v("Note: it is perfectly fine to never close the database. That’s even recommended for most apps.")])])],1)}),[],!1,null,null,null);t.default=s.exports}}]);