(window.webpackJsonp=window.webpackJsonp||[]).push([[42],{398:function(e,s,t){"use strict";t.r(s);var n=t(42),a=Object(n.a)({},(function(){var e=this,s=e.$createElement,t=e._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h1",{attrs:{id:"android"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#android"}},[e._v("#")]),e._v(" Android")]),e._v(" "),t("blockquote",[t("p",[e._v("his tutorial lets you write an Android/Kotlin application and use Koin inject and retrieve your components.")])]),e._v(" "),t("h2",{attrs:{id:"get-the-code"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#get-the-code"}},[e._v("#")]),e._v(" Get the code")]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[t("a",{attrs:{href:"https://github.com/InsertKoinIO/koin/tree/3.0.1/quickstart/getting-started-koin-android",target:"_blank",rel:"noopener noreferrer"}},[e._v("The source code is available at on Github"),t("OutboundLink")],1)])]),e._v(" "),t("h2",{attrs:{id:"gradle-setup"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#gradle-setup"}},[e._v("#")]),e._v(" Gradle Setup")]),e._v(" "),t("p",[e._v("Add the Koin Android dependency like below:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('// Add Jcenter to your repositories if needed\nrepositories {\n    jcenter()    \n}\ndependencies {\n    // Koin for Android\n    compile "org.koin:koin-android:$koin_version"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("h2",{attrs:{id:"our-components"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#our-components"}},[e._v("#")]),e._v(" Our components")]),e._v(" "),t("p",[e._v("Let's create a HelloRepository to provide some data:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('interface HelloRepository {\n    fun giveHello(): String\n}\n\nclass HelloRepositoryImpl() : HelloRepository {\n    override fun giveHello() = "Hello Koin"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br")])]),t("p",[e._v("Let's create a presenter class, for consuming this data:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v('class MySimplePresenter(val repo: HelloRepository) {\n\n    fun sayHello() = "${repo.giveHello()} from $this"\n}\n')])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br")])]),t("h2",{attrs:{id:"writing-the-koin-module"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#writing-the-koin-module"}},[e._v("#")]),e._v(" Writing the Koin module")]),e._v(" "),t("p",[e._v("Use the "),t("code",[e._v("module")]),e._v(" function to declare a module. Let's declare our first component:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("val appModule = module {\n\n    // single instance of HelloRepository\n    single<HelloRepository> { HelloRepositoryImpl() }\n\n    // Simple Presenter Factory\n    factory { MySimplePresenter(get()) }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br")])]),t("p",[e._v("?> we declare our MySimplePresenter class as "),t("code",[e._v("factory")]),e._v(" to have a create a new instance each time our Activity will need one.")]),e._v(" "),t("h2",{attrs:{id:"start-koin"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#start-koin"}},[e._v("#")]),e._v(" Start Koin")]),e._v(" "),t("p",[e._v("Now that we have a module, let's start it with Koin. Open your application class, or make one (don't forget to declare it in your manifest.xml). Just call the "),t("code",[e._v("startKoin()")]),e._v(" function:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class MyApplication : Application(){\n    override fun onCreate() {\n        super.onCreate()\n        // Start Koin\n        startKoin{\n            androidLogger()\n            androidContext(this@MyApplication)\n            modules(appModule)\n        }\n    }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("h2",{attrs:{id:"injecting-dependencies"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#injecting-dependencies"}},[e._v("#")]),e._v(" Injecting dependencies")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("MySimplePresenter")]),e._v(" component will be created with "),t("code",[e._v("HelloRepository")]),e._v(" instance. To get it into our Activity, let's inject it with the "),t("code",[e._v("by inject()")]),e._v(" delegate injector:")]),e._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[e._v("class MySimpleActivity : AppCompatActivity() {\n\n    // Lazy injected MySimplePresenter\n    val firstPresenter: MySimplePresenter by inject()\n\n    override fun onCreate(savedInstanceState: Bundle?) {\n        super.onCreate(savedInstanceState)\n        \n        //...\n    }\n}\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br"),t("span",{staticClass:"line-number"},[e._v("2")]),t("br"),t("span",{staticClass:"line-number"},[e._v("3")]),t("br"),t("span",{staticClass:"line-number"},[e._v("4")]),t("br"),t("span",{staticClass:"line-number"},[e._v("5")]),t("br"),t("span",{staticClass:"line-number"},[e._v("6")]),t("br"),t("span",{staticClass:"line-number"},[e._v("7")]),t("br"),t("span",{staticClass:"line-number"},[e._v("8")]),t("br"),t("span",{staticClass:"line-number"},[e._v("9")]),t("br"),t("span",{staticClass:"line-number"},[e._v("10")]),t("br"),t("span",{staticClass:"line-number"},[e._v("11")]),t("br")])]),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("by inject()")]),e._v(" function allows us to retrieve Koin instances, in Android components runtime (Activity, fragment, Service...)")])]),e._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[e._v("TIP")]),e._v(" "),t("p",[e._v("The "),t("code",[e._v("get()")]),e._v(" function is here to retrieve directly an instance (non lazy)")])])])}),[],!1,null,null,null);s.default=a.exports}}]);